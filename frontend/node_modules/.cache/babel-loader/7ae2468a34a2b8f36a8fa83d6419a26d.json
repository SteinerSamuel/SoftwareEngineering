{"remainingRequest":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\src\\components\\NotificationPlugin\\Notification.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\src\\components\\NotificationPlugin\\Notification.vue","mtime":1555088926290},{"path":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"notification\",\n  props: {\n    message: String,\n    icon: String,\n    verticalAlign: {\n      type: String,\n      default: \"top\"\n    },\n    horizontalAlign: {\n      type: String,\n      default: \"center\"\n    },\n    type: {\n      type: String,\n      default: \"info\"\n    },\n    timeout: {\n      type: Number,\n      default: 2500\n    },\n    timestamp: {\n      type: Date,\n      default: () => new Date()\n    }\n  },\n\n  data() {\n    return {\n      elmHeight: 0\n    };\n  },\n\n  computed: {\n    hasIcon() {\n      return this.icon && this.icon.length > 0;\n    },\n\n    alertType() {\n      return `alert-${this.type}`;\n    },\n\n    customPosition() {\n      let initialMargin = 20;\n      let alertHeight = this.elmHeight + 10;\n      let sameAlertsCount = this.$notifications.state.filter(alert => {\n        return alert.horizontalAlign === this.horizontalAlign && alert.verticalAlign === this.verticalAlign && alert.timestamp <= this.timestamp;\n      }).length;\n      let pixels = (sameAlertsCount - 1) * alertHeight + initialMargin;\n      let styles = {};\n\n      if (this.verticalAlign === \"top\") {\n        styles.top = `${pixels}px`;\n      } else {\n        styles.bottom = `${pixels}px`;\n      }\n\n      return styles;\n    }\n\n  },\n  methods: {\n    close() {\n      this.$emit(\"on-close\", this.timestamp);\n    }\n\n  },\n\n  mounted() {\n    this.elmHeight = this.$el.clientHeight;\n\n    if (this.timeout) {\n      setTimeout(this.close, this.timeout);\n    }\n  }\n\n};",{"version":3,"sources":["Notification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAwBA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA,MAFA;AAGA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAHA;AAOA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAPA;AAWA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAXA;AAeA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAfA;AAmBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,MAAA,IAAA,IAAA;AAFA;AAnBA,GAFA;;AA0BA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GA9BA;;AA+BA,EAAA,QAAA,EAAA;AACA,IAAA,OAAA,GAAA;AACA,aAAA,KAAA,IAAA,IAAA,KAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA,KAHA;;AAIA,IAAA,SAAA,GAAA;AACA,aAAA,SAAA,KAAA,IAAA,EAAA;AACA,KANA;;AAOA,IAAA,cAAA,GAAA;AACA,UAAA,aAAA,GAAA,EAAA;AACA,UAAA,WAAA,GAAA,KAAA,SAAA,GAAA,EAAA;AACA,UAAA,eAAA,GAAA,KAAA,cAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA;AACA,eACA,KAAA,CAAA,eAAA,KAAA,KAAA,eAAA,IACA,KAAA,CAAA,aAAA,KAAA,KAAA,aADA,IAEA,KAAA,CAAA,SAAA,IAAA,KAAA,SAHA;AAKA,OANA,EAMA,MANA;AAOA,UAAA,MAAA,GAAA,CAAA,eAAA,GAAA,CAAA,IAAA,WAAA,GAAA,aAAA;AACA,UAAA,MAAA,GAAA,EAAA;;AACA,UAAA,KAAA,aAAA,KAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,GAAA,GAAA,GAAA,MAAA,IAAA;AACA,OAFA,MAEA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,GAAA,MAAA,IAAA;AACA;;AACA,aAAA,MAAA;AACA;;AAzBA,GA/BA;AA0DA,EAAA,OAAA,EAAA;AACA,IAAA,KAAA,GAAA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,KAAA,SAAA;AACA;;AAHA,GA1DA;;AA+DA,EAAA,OAAA,GAAA;AACA,SAAA,SAAA,GAAA,KAAA,GAAA,CAAA,YAAA;;AACA,QAAA,KAAA,OAAA,EAAA;AACA,MAAA,UAAA,CAAA,KAAA,KAAA,EAAA,KAAA,OAAA,CAAA;AACA;AACA;;AApEA,CAAA","sourcesContent":["<template>\r\n  <div\r\n    @click=\"close()\"\r\n    data-notify=\"container\"\r\n    class=\"alert open alert-with-icon\"\r\n    role=\"alert\"\r\n    :class=\"[verticalAlign, horizontalAlign, alertType]\"\r\n    :style=\"customPosition\"\r\n    data-notify-position=\"top-center\"\r\n  >\r\n    <button\r\n      type=\"button\"\r\n      aria-hidden=\"true\"\r\n      class=\"close\"\r\n      data-notify=\"dismiss\"\r\n      @click=\"close\"\r\n    >\r\n      Ã—\r\n    </button>\r\n    <i data-notify=\"icon\" class=\"material-icons\">{{ icon }}</i>\r\n    <span data-notify=\"message\" v-html=\"message\"></span>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"notification\",\r\n  props: {\r\n    message: String,\r\n    icon: String,\r\n    verticalAlign: {\r\n      type: String,\r\n      default: \"top\"\r\n    },\r\n    horizontalAlign: {\r\n      type: String,\r\n      default: \"center\"\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"info\"\r\n    },\r\n    timeout: {\r\n      type: Number,\r\n      default: 2500\r\n    },\r\n    timestamp: {\r\n      type: Date,\r\n      default: () => new Date()\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      elmHeight: 0\r\n    };\r\n  },\r\n  computed: {\r\n    hasIcon() {\r\n      return this.icon && this.icon.length > 0;\r\n    },\r\n    alertType() {\r\n      return `alert-${this.type}`;\r\n    },\r\n    customPosition() {\r\n      let initialMargin = 20;\r\n      let alertHeight = this.elmHeight + 10;\r\n      let sameAlertsCount = this.$notifications.state.filter(alert => {\r\n        return (\r\n          alert.horizontalAlign === this.horizontalAlign &&\r\n          alert.verticalAlign === this.verticalAlign &&\r\n          alert.timestamp <= this.timestamp\r\n        );\r\n      }).length;\r\n      let pixels = (sameAlertsCount - 1) * alertHeight + initialMargin;\r\n      let styles = {};\r\n      if (this.verticalAlign === \"top\") {\r\n        styles.top = `${pixels}px`;\r\n      } else {\r\n        styles.bottom = `${pixels}px`;\r\n      }\r\n      return styles;\r\n    }\r\n  },\r\n  methods: {\r\n    close() {\r\n      this.$emit(\"on-close\", this.timestamp);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.elmHeight = this.$el.clientHeight;\r\n    if (this.timeout) {\r\n      setTimeout(this.close, this.timeout);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@media screen and (max-width: 991px) {\r\n  .alert {\r\n    width: auto !important;\r\n    margin: 0 10px;\r\n\r\n    &.left {\r\n      left: 0 !important;\r\n    }\r\n    &.right {\r\n      right: 0 !important;\r\n    }\r\n    &.center {\r\n      margin: 0 10px !important;\r\n    }\r\n  }\r\n}\r\n\r\n.alert {\r\n  z-index: 100;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  width: 41%;\r\n\r\n  &.center {\r\n    left: 0;\r\n    right: 0;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin: 0 auto;\r\n  }\r\n  &.left {\r\n    left: 20px;\r\n  }\r\n  &.right {\r\n    right: 20px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/NotificationPlugin"}]}