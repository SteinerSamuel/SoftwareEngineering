{"remainingRequest":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\src\\components\\NotificationPlugin\\index.js","dependencies":[{"path":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\src\\components\\NotificationPlugin\\index.js","mtime":1555088926293},{"path":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Notifications from \"./Notifications.vue\";\nconst NotificationStore = {\n  state: [],\n\n  // here the notifications will be added\n  removeNotification(timestamp) {\n    const indexToDelete = this.state.findIndex(n => n.timestamp === timestamp);\n\n    if (indexToDelete !== -1) {\n      this.state.splice(indexToDelete, 1);\n    }\n  },\n\n  addNotification(notification) {\n    notification.timestamp = new Date();\n    notification.timestamp.setMilliseconds(notification.timestamp.getMilliseconds() + this.state.length);\n    this.state.push(notification);\n  },\n\n  notify(notification) {\n    if (Array.isArray(notification)) {\n      notification.forEach(notificationInstance => {\n        this.addNotification(notificationInstance);\n      });\n    } else {\n      this.addNotification(notification);\n    }\n  }\n\n};\nvar NotificationsPlugin = {\n  install(Vue) {\n    Vue.mixin({\n      data() {\n        return {\n          notificationStore: NotificationStore\n        };\n      },\n\n      methods: {\n        notify(notification) {\n          this.notificationStore.notify(notification);\n        }\n\n      }\n    });\n    Object.defineProperty(Vue.prototype, \"$notify\", {\n      get() {\n        return this.$root.notify;\n      }\n\n    });\n    Object.defineProperty(Vue.prototype, \"$notifications\", {\n      get() {\n        return this.$root.notificationStore;\n      }\n\n    });\n    Vue.component(\"Notifications\", Notifications);\n  }\n\n};\nexport default NotificationsPlugin;",{"version":3,"sources":["C:\\Users\\Sam\\Documents\\SoftwareEngineering\\frontend\\src\\components\\NotificationPlugin\\index.js"],"names":["Notifications","NotificationStore","state","removeNotification","timestamp","indexToDelete","findIndex","n","splice","addNotification","notification","Date","setMilliseconds","getMilliseconds","length","push","notify","Array","isArray","forEach","notificationInstance","NotificationsPlugin","install","Vue","mixin","data","notificationStore","methods","Object","defineProperty","prototype","get","$root","component"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;;AACb;AAEXC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAMC,aAAa,GAAG,KAAKH,KAAL,CAAWI,SAAX,CAAqBC,CAAC,IAAIA,CAAC,CAACH,SAAF,KAAgBA,SAA1C,CAAtB;;AACA,QAAIC,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxB,WAAKH,KAAL,CAAWM,MAAX,CAAkBH,aAAlB,EAAiC,CAAjC;AACD;AACF,GARuB;;AASxBI,EAAAA,eAAe,CAACC,YAAD,EAAe;AAC5BA,IAAAA,YAAY,CAACN,SAAb,GAAyB,IAAIO,IAAJ,EAAzB;AACAD,IAAAA,YAAY,CAACN,SAAb,CAAuBQ,eAAvB,CACEF,YAAY,CAACN,SAAb,CAAuBS,eAAvB,KAA2C,KAAKX,KAAL,CAAWY,MADxD;AAGA,SAAKZ,KAAL,CAAWa,IAAX,CAAgBL,YAAhB;AACD,GAfuB;;AAgBxBM,EAAAA,MAAM,CAACN,YAAD,EAAe;AACnB,QAAIO,KAAK,CAACC,OAAN,CAAcR,YAAd,CAAJ,EAAiC;AAC/BA,MAAAA,YAAY,CAACS,OAAb,CAAqBC,oBAAoB,IAAI;AAC3C,aAAKX,eAAL,CAAqBW,oBAArB;AACD,OAFD;AAGD,KAJD,MAIO;AACL,WAAKX,eAAL,CAAqBC,YAArB;AACD;AACF;;AAxBuB,CAA1B;AA2BA,IAAIW,mBAAmB,GAAG;AACxBC,EAAAA,OAAO,CAACC,GAAD,EAAM;AACXA,IAAAA,GAAG,CAACC,KAAJ,CAAU;AACRC,MAAAA,IAAI,GAAG;AACL,eAAO;AACLC,UAAAA,iBAAiB,EAAEzB;AADd,SAAP;AAGD,OALO;;AAMR0B,MAAAA,OAAO,EAAE;AACPX,QAAAA,MAAM,CAACN,YAAD,EAAe;AACnB,eAAKgB,iBAAL,CAAuBV,MAAvB,CAA8BN,YAA9B;AACD;;AAHM;AAND,KAAV;AAYAkB,IAAAA,MAAM,CAACC,cAAP,CAAsBN,GAAG,CAACO,SAA1B,EAAqC,SAArC,EAAgD;AAC9CC,MAAAA,GAAG,GAAG;AACJ,eAAO,KAAKC,KAAL,CAAWhB,MAAlB;AACD;;AAH6C,KAAhD;AAKAY,IAAAA,MAAM,CAACC,cAAP,CAAsBN,GAAG,CAACO,SAA1B,EAAqC,gBAArC,EAAuD;AACrDC,MAAAA,GAAG,GAAG;AACJ,eAAO,KAAKC,KAAL,CAAWN,iBAAlB;AACD;;AAHoD,KAAvD;AAKAH,IAAAA,GAAG,CAACU,SAAJ,CAAc,eAAd,EAA+BjC,aAA/B;AACD;;AAzBuB,CAA1B;AA4BA,eAAeqB,mBAAf","sourcesContent":["import Notifications from \"./Notifications.vue\";\r\n\r\nconst NotificationStore = {\r\n  state: [], // here the notifications will be added\r\n\r\n  removeNotification(timestamp) {\r\n    const indexToDelete = this.state.findIndex(n => n.timestamp === timestamp);\r\n    if (indexToDelete !== -1) {\r\n      this.state.splice(indexToDelete, 1);\r\n    }\r\n  },\r\n  addNotification(notification) {\r\n    notification.timestamp = new Date();\r\n    notification.timestamp.setMilliseconds(\r\n      notification.timestamp.getMilliseconds() + this.state.length\r\n    );\r\n    this.state.push(notification);\r\n  },\r\n  notify(notification) {\r\n    if (Array.isArray(notification)) {\r\n      notification.forEach(notificationInstance => {\r\n        this.addNotification(notificationInstance);\r\n      });\r\n    } else {\r\n      this.addNotification(notification);\r\n    }\r\n  }\r\n};\r\n\r\nvar NotificationsPlugin = {\r\n  install(Vue) {\r\n    Vue.mixin({\r\n      data() {\r\n        return {\r\n          notificationStore: NotificationStore\r\n        };\r\n      },\r\n      methods: {\r\n        notify(notification) {\r\n          this.notificationStore.notify(notification);\r\n        }\r\n      }\r\n    });\r\n    Object.defineProperty(Vue.prototype, \"$notify\", {\r\n      get() {\r\n        return this.$root.notify;\r\n      }\r\n    });\r\n    Object.defineProperty(Vue.prototype, \"$notifications\", {\r\n      get() {\r\n        return this.$root.notificationStore;\r\n      }\r\n    });\r\n    Vue.component(\"Notifications\", Notifications);\r\n  }\r\n};\r\n\r\nexport default NotificationsPlugin;\r\n"]}]}